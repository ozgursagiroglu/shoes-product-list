import Head from 'next/head';
import Header from '../components/common/Header';
import ProductList from '../components/ProductList';
import { gql } from '@apollo/client';
import client from '../apollo-client';
import ProductFilters from '../components/ProductFilters';
import ProductListOptions from '../components/ProductListOptions';
import ProductListPagination from '../components/ProductListPagination';
import { useCallback, useState } from 'react';
import cx from 'classnames';

export default function Home({ data }) {
  const [column, setColumn] = useState(4);
  const [showFilters, setShowFilters] = useState(false);

  const handleToggleFilters = useCallback(
    () => setShowFilters(prev => !prev),
    []
  );

  return (
    <div>
      <Head>
        <title>Shoes</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header />

      <div className="container mx-auto flex items-start flex-grow">
        <div
          className={cx(
            'fixed z-30 inset-0 p-6 bg-white flex-shrink-0', // mobile
            'lg:static lg:block lg:w-64 lg:p-0 lg:z-10 lg:pt-12', // desktop
            {
              hidden: !showFilters,
            }
          )}>
          <button
            className="text-4xl text-black font-light absolute top-4 right-4"
            onClick={handleToggleFilters}>
            &times;
          </button>
          <ProductFilters data={data} />
        </div>
        <div className="w-full px-6 lg:pr-0">
          <div className="mb-12">
            <ProductListOptions
              onColumnChange={setColumn}
              onToggleFilters={handleToggleFilters}
            />
            <ProductList data={data} column={column} />
            <ProductListPagination data={data} />
          </div>
        </div>
      </div>
    </div>
  );
}

export async function getServerSideProps(ctx) {
  const { category, brands, sort, page = 1 } = ctx.query;

  const { data } = await client.query({
    query: gql`
      query ($filter: ProductListFilter, $sort: Sort, $page: Int) {
        getProducts(filter: $filter, sort: $sort, page: $page) {
          items {
            category
            name
            image
            price
            sale_price
            subcategory
            brand
          }
          filters {
            categories {
              name
              value
            }
            brands {
              name
              value
            }
          }
          meta {
            page
            limit
            total
          }
        }
      }
    `,
    variables: {
      page: +page,
      filter: {
        ...(category ? { category } : null),
        ...(brands ? { brand: brands } : null),
      },
      sort: sort,
    },
  });
  return {
    props: {
      data: data.getProducts,
    },
  };
}
